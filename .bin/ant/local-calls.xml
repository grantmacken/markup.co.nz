<project
    basedir="../../"
    default="localhost calls"
    name="localhost calls"
    xmlns:xdb="http://exist-db.org/ant">

<target name="get-short-link">
<property name="q_encode">
xquery version "3.0";
let $encode := function ($n){
    let $seq1 := (0 to 9)
    let $seq2 := map(function($x) { codepoints-to-string($x) }, string-to-codepoints('A') to string-to-codepoints('H'))
    let $seq3 := map(function($x) { codepoints-to-string($x) }, string-to-codepoints('J') to string-to-codepoints('N'))
    let $seq4 := map(function($x) { codepoints-to-string($x) }, string-to-codepoints('P') to string-to-codepoints('Z'))
    let $seq5 := ('_')
    let $seq6 := map(function($x) { codepoints-to-string($x) }, string-to-codepoints('a') to string-to-codepoints('k'))
    let $seq7 := map(function($x) { codepoints-to-string($x) }, string-to-codepoints('m') to string-to-codepoints('z'))
    let $seqChars := ($seq1, $seq2, $seq3, $seq4, $seq5 , $seq6, $seq7)
    let $base := count($seqChars)

    let $getRemainder := function($n){
    if($n gt 59 ) then (($n mod xs:integer($base)) + 1)
    else($n + 1)
    }

    let $getChar := function($n){$seqChars[xs:integer($getRemainder($n))]}

    let $nextN := function($n){
    ($n - xs:integer($getRemainder($n))) div xs:integer($base)}

    let $seqNth := ( xs:integer($nextN($nextN($n))), xs:integer($nextN($n)) , xs:integer($n) )

    return
    string-join(map(function($n){$seqChars[xs:integer($getRemainder($n))]}, $seqNth),'')
    }

return
$encode(${n})
</property>

<xdb:xquery
            uri="xmldb:exist://${host.local}:8080/exist/xmlrpc/db"
            query="${q_encode}" user="${exist.username}"
            password="${exist.password}"
            outputproperty="encoded" />
<echo>${encoded}</echo>
</target>



<!--  ESTABLISH IF COLLECTION EXISTS   -->
<target name="collection-available" >
<property name="q_collection-available">
xquery version "3.0";
import module namespace xmldb="http://exist-db.org/xquery/xmldb";

xmldb:collection-available("/apps/${project.domain}/data/archive/${ymd}")
</property>
<xdb:xquery
            uri="xmldb:exist://${host.local}:8080/exist/xmlrpc/db"
            query="${q_collection-available}" user="${exist.username}"
            password="${exist.password}"
            outputproperty="isAvailable" />
<echo>${isAvailable}</echo>
</target>

<!--  ESTABLISH IF RESOURCE EXISTS   -->
<target name="resource-available" >
<property name="q_resource-available">
xquery version "3.0";
doc-available("/apps/${project.domain}/data/authors/${hash}.xml" )
</property>
<xdb:xquery
            uri="xmldb:exist://${host.local}:8080/exist/xmlrpc/db"
            query="${q_resource-available}"
	    user="${exist.username}"
            password="${exist.password}"
            outputproperty="isResourceAvailable" />
<echo>${isResourceAvailable}</echo>
</target>

<!--  Count Child Resources xmldb:get-child-resources  -->
<target name="child-resources-count" >
<property name="q_child-resources-count">
xquery version "3.0";
import module namespace xmldb="http://exist-db.org/xquery/xmldb";

count(xmldb:get-child-resources("/apps/${project.domain}/data/archive/${ymd}"))
</property>
<xdb:xquery
            uri="xmldb:exist://${host.local}:8080/exist/xmlrpc/db"
            query="${q_child-resources-count}" user="${exist.username}"
            password="${exist.password}"
            outputproperty="resourcesCount" />
<echo>${resourcesCount}</echo>
</target>


<!--  Get util:uuid  -->
<target name="get-uuid" >
<property name="q_uuid">
xquery version "3.0";
import module namespace util="http://exist-db.org/xquery/util";
util:uuid()
</property>
<xdb:xquery
            uri="xmldb:exist://${host.local}:8080/exist/xmlrpc/db"
            query="${q_uuid}" user="${exist.username}"
            password="${exist.password}"
            outputproperty="uuid" />
<echo>${uuid}</echo>
</target>


<!--  Get util:uuid  -->

<target name="get-hash" >
<property name="q_hash">
xquery version "3.0";
import module namespace util="http://exist-db.org/xquery/util";
let $href  := "${url}"
let $base64flag := true()
let $alogo := 'md5'
let $hash := replace(util:hash($href, $alogo, $base64flag), '(=+$)', '')
return
translate( $hash, '+/', '-_')
</property>
<xdb:xquery
            uri="xmldb:exist://${host.local}:8080/exist/xmlrpc/db"
            query="${q_hash}" user="${exist.username}"
            password="${exist.password}"
            outputproperty="hash" />
<echo>${hash}</echo>
</target>

</project>
